[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx":"19","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\paymentGateway.jsx":"20"},{"size":500,"mtime":1607827205629,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607827205644,"results":"23","hashOfConfig":"22"},{"size":1984,"mtime":1607827205604,"results":"24","hashOfConfig":"22"},{"size":741,"mtime":1607827205754,"results":"25","hashOfConfig":"22"},{"size":1467,"mtime":1607827205774,"results":"26","hashOfConfig":"22"},{"size":111,"mtime":1607827205784,"results":"27","hashOfConfig":"22"},{"size":81,"mtime":1607827205744,"results":"28","hashOfConfig":"22"},{"size":451,"mtime":1607827205744,"results":"29","hashOfConfig":"22"},{"size":5734,"mtime":1607827205704,"results":"30","hashOfConfig":"22"},{"size":3848,"mtime":1607829883892,"results":"31","hashOfConfig":"22"},{"size":5282,"mtime":1607827205714,"results":"32","hashOfConfig":"22"},{"size":8175,"mtime":1607827205734,"results":"33","hashOfConfig":"22"},{"size":2599,"mtime":1607827205764,"results":"34","hashOfConfig":"22"},{"size":2837,"mtime":1607827205684,"results":"35","hashOfConfig":"22"},{"size":2896,"mtime":1607827205714,"results":"36","hashOfConfig":"22"},{"size":1862,"mtime":1607827205784,"results":"37","hashOfConfig":"22"},{"size":5102,"mtime":1607827205684,"results":"38","hashOfConfig":"22"},{"size":5326,"mtime":1607827205729,"results":"39","hashOfConfig":"22"},{"size":4608,"mtime":1607827205694,"results":"40","hashOfConfig":"22"},{"size":2651,"mtime":1607827205724,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"twlnfm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js",[],["91","92"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js",["93"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Notify from './services/notify';\nimport {  ThemeProvider } from '@material-ui/core/styles';\nimport {theme} from './utils/theme';\nimport Login from './components/login';\nimport signup from './components/register';\nimport { stateContext } from './context';\nimport { initialState, stateReducer } from './context/reducer';\nimport Dashboard from './components/dashboard';\nimport Orders from './components/orders';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n  useEffect(() => {\n    Notify.notifications.subscribe((alert) => alert instanceof Function && alert());\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <stateContext.Provider value={{state:state,dispatch:dispatch}}>\n      <Router>\n      {state.isAuthenticated?(\n        <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n             <Route exact path=\"/orders\" component={Orders} />\n             <Route exact path=\"*\" component={Dashboard} />\n            </Switch>\n        </div>\n        ):(\n          <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={signup} />\n              <Route path=\"*\" component={Login} />\n          </Switch>\n       )}\n      </Router>\n      <ToastContainer autoClose={5000} />\n      <Backdrop style={{zIndex:'10 !important'}} open={state.isLoading}>\n                  <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      </stateContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx",["94"],"import React,{useState,useContext} from \"react\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {stateContext} from '../context';\nimport {setIsAuthenticated} from '../context/action';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    [theme.breakpoints.up('lg')]: {\n      marginLeft: theme.spacing(3),\n      width: '40%',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '100%',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const context = useContext(stateContext);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const logoutUser = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n    localStorage.clear();\n    context.dispatch(setIsAuthenticated(false));\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={logoutUser}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Library System\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search for Books or Authors...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx",["95","96"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx",["97"],"import React,{useState, useContext} from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport {postApi} from '../services/apiservice';\nimport { Link } from \"react-router-dom\";\nimport {stateContext} from '../context';\nimport {setIsLoading} from '../context/action'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  main:{\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  fields: {\n    backgroundColor: '#FFFFFF',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    position: \"absolute\"\n  },\n  signup: {\n    margin: theme.spacing(5,0,0)\n  },\n  formControl:{\n    width:\"100%\"\n  }\n}));\n\nexport default function SignUp({history}) {\n  const classes = useStyles();\n  const [emailId, setEmailId] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [cnumber, setContactNo] = useState('');\n  const [inValidEmail, setInValidEmail] = useState('');\n  const [roleType, setRoleType] = useState('');\n  const [cardDetail, setCardDetail] = useState('');\n  const context = useContext(stateContext);\n\n  const registerUser= async (event)=>{\n    event.preventDefault();\n    try{\n        context.dispatch(setIsLoading(true));\n        const user={\n            FullName:fullName,\n            Email:emailId,\n            Password:password,\n            ContactNumber:cnumber,\n            CardDetail:cardDetail,\n            RoleType:roleType\n          };\n        const response= await postApi('SaveUser',user);\n        context.dispatch(setIsLoading(false));\n        history.push('/login');\n    } catch(error){\n      context.dispatch(setIsLoading(false));\n    }\n  }\n\n const onEmailChange=(event)=> {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(event.target.value)){\n      setInValidEmail(\"\");\n    } else {\n      setInValidEmail('Invalid Email format');\n    }\n  }\n\n  const handleChangeInroleType = (event) => {\n    setRoleType(event.target.value);\n  };\n\n  return (\n      <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.main}>\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  SignUp\n                </Typography>\n                <form className={classes.form} onSubmit={registerUser}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        autoComplete=\"fname\"\n                        name=\"Full Name\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"Full Name\"\n                        placeholder=\"Full Name\"\n                        value={fullName}\n                        onChange={(e)=>setFullName(e.target.value)}\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        className={classes.fields}\n                        required\n                        fullWidth\n                        id=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        error={inValidEmail}\n                        helperText={inValidEmail}\n                        onBlur={onEmailChange}\n                        value={emailId}\n                        onChange={(e)=>setEmailId(e.target.value)}\n                        autoComplete=\"email\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        autoComplete=\"password\"\n                        name=\"Password\"\n                        type=\"password\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"Password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                      />\n                    </Grid>\n                   <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        className={classes.fields}\n                        required\n                        fullWidth\n                        id=\"contact\"\n                        placeholder=\"Contact Number\"\n                        name=\"contact\"\n                        autoComplete=\"cnumber\"\n                        value={cnumber}\n                        onChange={(e)=>setContactNo(e.target.value)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        className={classes.fields}\n                        required\n                        fullWidth\n                        name=\"cardDetail\"\n                        placeholder=\"Card Details\"\n                        type=\"text\"\n                        id=\"cardDetail\"\n                        autoComplete=\"current-cardDetail\"\n                        value={cardDetail}\n                        onChange={(e)=>setCardDetail(e.target.value)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-outlined-label\">User Type</InputLabel>\n                            <Select\n                              labelId=\"demo-simple-select-outlined-label\"\n                              id=\"demo-simple-select-outlined\"\n                              value={roleType}\n                              onChange={handleChangeInroleType}\n                              label=\"User Type\"\n                            >\n                              <MenuItem value={1}>Student</MenuItem>\n                              <MenuItem value={2}>Business Owner</MenuItem>\n                            </Select>\n                          </FormControl>\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type=\"submit\"\n                    smallSize\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    disabled={!emailId || !password || !fullName || !roleType || !cnumber}\n                  >\n                    Sign Up\n                  </Button>\n                  <Grid container className={classes.signup} justify=\"flex-end\">\n                    <Grid item>\n                      <Link to=\"/login\">Already have an account? Login</Link>\n                    </Grid>\n                  </Grid>\n                </form>\n              </div>\n            </Container>\n      </React.Fragment>\n  );\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx",["98"],"import React,{useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\nimport bookurl from '../assets/images/book.png';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  footer:{\n      display:'flex',\n      justifyContent:'space-around'\n  }\n}));\n\nexport default function RecipeReviewCard({book,purchaseBook,borrowBook}) {\n  const classes = useStyles();\n\n  const purchase=()=>{\n    purchaseBook(book);\n  }\n\n  const borrow=()=>{\n    borrowBook(book)\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {book.Title.slice(0,2).toUpperCase()}\n          </Avatar>\n        }\n        title={book.Title}\n        subheader={`-By ${book.Publisher}`}\n      />\n      <CardMedia\n        className={classes.media}\n        image={bookurl}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         {book.Description.length>125?`${book.Description.slice(0,120)} . . .`:book.Description}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.footer}>\n          <div>\n            <Tooltip title=\"Issue book\" aria-label=\"issuebook\">\n                <IconButton aria-label=\"issue book\" onClick={borrow}>\n                    <LocalLibraryIcon/>\n                </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Purchse Book\" aria-label=\"Purchase\">\n                <IconButton aria-label=\"purchase\" onClick={purchase}>\n                    <ShoppingCartIcon />\n                </IconButton>\n            </Tooltip>\n          </div>\n        <Typography  color=\"textSecondary\" component=\"p\">\n            $ {book.Price}\n        </Typography>\n      </CardActions>\n     </Card>\n  );\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx",["99"],"import React,{useState, useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {postApi} from '../services/apiservice';\nimport {stateContext} from '../context';\nimport {setIsLoading} from '../context/action'\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(0.5)\n  },\n  fields: {\n    backgroundColor: '#FFFFFF',\n    margin: theme.spacing(0.5)\n  },\n}));\n\nexport default function AddBook({history,isOpen,close}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(isOpen);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [publisher, setPublisher] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0)\n  const context = useContext(stateContext);\n\n  const handleClose = () => {\n    setOpen(false);\n    close();\n  };\n\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  const saveBook= async (event)=>{\n    event.preventDefault();\n    try{\n        context.dispatch(setIsLoading(true));\n        context.dispatch(setIsLoading(false));\n    } catch(error){\n      context.dispatch(setIsLoading(false));\n    }\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">New Book</DialogTitle>\n        <DialogContent>\n        <form className={classes.form} onSubmit={saveBook}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"Title\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"Title\"\n                        value={title}\n                        onChange={(e)=>setTitle(e.target.value)}\n                        autoFocus\n                        label=\"Title\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"author\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"author\"\n                        value={author}\n                        onChange={(e)=>setAuthor(e.target.value)}\n                        autoFocus\n                        label=\"Author\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"publisher\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"publisher\"\n                        value={publisher}\n                        onChange={(e)=>setPublisher(e.target.value)}\n                        autoFocus\n                        label=\"Publisher\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"description\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        value={description}\n                        onChange={(e)=>setDescription(e.target.value)}\n                        autoFocus\n                        label=\"Description\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"price\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        value={price}\n                        onChange={(e)=>setPrice(e.target.value)}\n                        autoFocus\n                        label=\"Price\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            Save\n                        </Button>\n                    </Grid>\n              </Grid>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx",["100","101"],"import React,{useState, useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {postApi} from '../services/apiservice';\nimport {stateContext} from '../context';\nimport {setIsLoading} from '../context/action'\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(0.5)\n  },\n  fields: {\n    backgroundColor: '#FFFFFF',\n    margin: theme.spacing(0.5)\n  }\n}));\n\nexport default function PurchaseBook({isOpen,book,close}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(isOpen);\n  const [title] = useState(book.Title||'');\n  const [price, setPrice] = useState(book.Price||0);\n  const [id] = useState(book.id||'');\n  const [quantity, setQuantity] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [creditCardNo, setcreditCardNo] = useState('');\n  const context = useContext(stateContext);\n\n  const handleClose = () => {\n    setOpen(false);\n    close();\n  };\n\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  useEffect(() => {\n    setTotal(price*quantity);\n  }, [quantity,price])\n\n  const saveBook= async (event)=>{\n    event.preventDefault();\n    try{\n        context.dispatch(setIsLoading(true));\n        const order={\n          CreditCard:creditCardNo,\n          OrderDateAndTime: new Date(),\n          BookCode:id,\n          UserCode:localStorage.getItem('userId')||'',\n          Price: price,\n          Quantity: quantity\n        }\n        context.dispatch(setIsLoading(false));\n        close();\n    } catch(error){\n      context.dispatch(setIsLoading(false));\n    }\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Purchase Book</DialogTitle>\n        <DialogContent>\n        <form className={classes.form} onSubmit={saveBook}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"Title\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"Title\"\n                        value={title}\n                        readOnly={true}\n                        label=\"Title\"\n                      />\n                    </Grid>\n                  <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"creditCardNo\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"creditCardNo\"\n                        value={creditCardNo}\n                        onChange={(e)=>setcreditCardNo(e.target.value)}\n                        readOnly={true}\n                        label=\"Credit Card No.\"\n                      />\n                  </Grid>\n                  <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"price\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        value={price}\n                        onChange={(e)=>setPrice(e.target.value)}\n                        autoFocus\n                        label=\"Price\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"quantity\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"quantity\"\n                        value={quantity}\n                        onChange={(e)=>setQuantity(e.target.value)}\n                        autoFocus\n                        label=\"Quantity\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        name=\"price\"\n                        className={classes.fields}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        value={total}\n                        label=\"Total\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            Save\n                        </Button>\n                    </Grid>\n              </Grid>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx",["102","103","104"],"import React,{useState, useContext, useEffect} from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {postApi} from '../services/apiservice';\nimport {stateContext} from '../context';\nimport {setIsLoading} from '../context/action'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(0.5)\n  },\n  fields: {\n    backgroundColor: '#FFFFFF',\n    margin: theme.spacing(0.5)\n  }\n}));\n\nvar d = new Date();\nd.setDate(d.getDate()+parseInt(14));\nexport default function BorrowBook({isOpen,book,close}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(isOpen);\n  const [title] = useState(book.Title||'');\n  const [issueDate, setIssueDate] = useState(new Date());\n  const [returnDate, setReturnDate] = useState(d);\n  const context = useContext(stateContext);\n\n  const handleClose = () => {\n    setOpen(false);\n    close();\n  };\n\n  useEffect(() => {\n    console.log(book);\n    setOpen(isOpen)\n  }, [isOpen])\n\n\n  const saveBook= async (event)=>{\n    event.preventDefault();\n    try{\n        context.dispatch(setIsLoading(true));\n        const borrow={\n          UserCode:localStorage.getItem('UserId')||'',\n          BookCode:book.Id,\n          BorrowingDate: issueDate,\n          ReturnDate: returnDate\n        }\n        console.log(borrow);\n        context.dispatch(setIsLoading(false));\n        close();\n    } catch(error){\n      context.dispatch(setIsLoading(false));\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        maxWidth={'sm'}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Borrow Book</DialogTitle>\n        <DialogContent>\n        <form className={classes.form} onSubmit={saveBook}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n          <Grid item xs={12} sm={12}>\n             <Typography variant=\"body1\" color=\"textPrimary\" component=\"h3\">{book.Title}</Typography>\n             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">By - {book.Author}</Typography>\n          </Grid>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            \n                  <Grid item xs={12}>\n                      <KeyboardDatePicker\n                          disableToolbar\n                          variant=\"outlined\"\n                          format=\"dd/MM/yyyy\"\n                          margin=\"normal\"\n                          id=\"date-picker-inline\"\n                          label=\"Issued Date\"\n                          value={issueDate}\n                          fullWidth\n                          readOnly={true}\n                          onChange={setIssueDate}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </Grid>\n                  <Grid item xs={12}>\n                      <KeyboardDatePicker\n                          disableToolbar\n                          variant=\"outlined\"\n                          format=\"dd/MM/yyyy\"\n                          margin=\"normal\"\n                          id=\"date-picker-inline\"\n                          label=\"Return Date\"\n                          value={returnDate}\n                          fullWidth\n                          readOnly={true}\n                          onChange={setReturnDate}\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </Grid>\n                </MuiPickersUtilsProvider>\n                <Grid item xs={12} sm={12}>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            Save\n                        </Button>\n                </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\paymentGateway.jsx",["105","106","107","108","109","110","111","112","113"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport default function Paymentgateway({isOpen,book,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n//   const [title] = useState(book.Title||'');\r\n//   const [price, setPrice] = useState(book.Price||0);\r\n//   const [id] = useState(book.id||'');\r\n//   const [quantity, setQuantity] = useState(1);\r\n//   const [total, setTotal] = useState(0);\r\n//   const [creditCardNo, setcreditCardNo] = useState('');\r\n//   const context = useContext(stateContext);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n//   useEffect(() => {\r\n//     setTotal(price*quantity);\r\n//   }, [quantity,price])\r\n\r\n//   const saveBook= async (event)=>{\r\n//     event.preventDefault();\r\n//     try{\r\n//         context.dispatch(setIsLoading(true));\r\n//         const order={\r\n//           CreditCard:creditCardNo,\r\n//           OrderDateAndTime: new Date(),\r\n//           BookCode:id,\r\n//           UserCode:localStorage.getItem('userId')||'',\r\n//           Price: price,\r\n//           Quantity: quantity\r\n//         }\r\n//         context.dispatch(setIsLoading(false));\r\n//         close();\r\n//     } catch(error){\r\n//       context.dispatch(setIsLoading(false));\r\n//     }\r\n//   }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Payment Gateway</DialogTitle>\r\n        <DialogContent>\r\n            <div>Hi. this is payment page!</div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* {isPurchaseBookOpen?(<PaymentGateway isOpen={isPurchaseBookOpen} close={closePurchaseBook}/>):(\"\")} */}\r\n    </React.Fragment>\r\n  );\r\n\r\n}",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":17,"column":10,"nodeType":"120","messageId":"121","endLine":17,"endColumn":20},{"ruleId":"118","severity":1,"message":"122","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":13},{"ruleId":"118","severity":1,"message":"124","line":76,"column":9,"nodeType":"120","messageId":"121","endLine":76,"endColumn":25},{"ruleId":"118","severity":1,"message":"125","line":83,"column":15,"nodeType":"120","messageId":"121","endLine":83,"endColumn":23},{"ruleId":"118","severity":1,"message":"126","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"127","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"127","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"128","line":52,"column":15,"nodeType":"120","messageId":"121","endLine":52,"endColumn":20},{"ruleId":"118","severity":1,"message":"127","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":16},{"ruleId":"118","severity":1,"message":"129","line":35,"column":10,"nodeType":"120","messageId":"121","endLine":35,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":48,"column":6,"nodeType":"132","endLine":48,"endColumn":14,"suggestions":"133"},{"ruleId":"118","severity":1,"message":"122","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":23},{"ruleId":"118","severity":1,"message":"134","line":1,"column":25,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"135","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"127","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"136","line":8,"column":9,"nodeType":"120","messageId":"121","endLine":8,"endColumn":21},{"ruleId":"118","severity":1,"message":"137","line":9,"column":9,"nodeType":"120","messageId":"121","endLine":9,"endColumn":21},{"ruleId":"118","severity":1,"message":"138","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":17},{"ruleId":"118","severity":1,"message":"139","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":12},{"ruleId":"118","severity":1,"message":"140","line":25,"column":9,"nodeType":"120","messageId":"121","endLine":25,"endColumn":16},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'purchaseBookOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'postApi' is defined but never used.","'order' is assigned a value but never used.","'title' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'book'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'useContext' is defined but never used.","'Button' is defined but never used.","'stateContext' is defined but never used.","'setIsLoading' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [book, isOpen]",{"range":"146","text":"147"},[1464,1472],"[book, isOpen]"]