[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1984,"mtime":1607364383309,"results":"23","hashOfConfig":"21"},{"size":770,"mtime":1607361631781,"results":"24","hashOfConfig":"21"},{"size":1518,"mtime":1606679061171,"results":"25","hashOfConfig":"21"},{"size":114,"mtime":1606679060965,"results":"26","hashOfConfig":"21"},{"size":83,"mtime":1606679061018,"results":"27","hashOfConfig":"21"},{"size":475,"mtime":1607170884978,"results":"28","hashOfConfig":"21"},{"size":5938,"mtime":1607361549325,"results":"29","hashOfConfig":"21"},{"size":2935,"mtime":1607511139315,"results":"30","hashOfConfig":"21"},{"size":5394,"mtime":1607510169000,"results":"31","hashOfConfig":"21"},{"size":8401,"mtime":1607364435381,"results":"32","hashOfConfig":"21"},{"size":1730,"mtime":1607443472151,"results":"33","hashOfConfig":"21"},{"size":2931,"mtime":1607442790721,"results":"34","hashOfConfig":"21"},{"size":2991,"mtime":1607253077031,"results":"35","hashOfConfig":"21"},{"size":1908,"mtime":1607283984923,"results":"36","hashOfConfig":"21"},{"size":5250,"mtime":1607281025992,"results":"37","hashOfConfig":"21"},{"size":5485,"mtime":1607284085317,"results":"38","hashOfConfig":"21"},{"size":4744,"mtime":1607284056198,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"twlnfm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js",[],["86","87"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js",["88"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Notify from './services/notify';\nimport {  ThemeProvider } from '@material-ui/core/styles';\nimport {theme} from './utils/theme';\nimport Login from './components/login';\nimport signup from './components/register';\nimport { stateContext } from './context';\nimport { initialState, stateReducer } from './context/reducer';\nimport Dashboard from './components/dashboard';\nimport Orders from './components/orders';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n  useEffect(() => {\n    Notify.notifications.subscribe((alert) => alert instanceof Function && alert());\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <stateContext.Provider value={{state:state,dispatch:dispatch}}>\n      <Router>\n      {state.isAuthenticated?(\n        <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n             <Route exact path=\"/orders\" component={Orders} />\n             <Route exact path=\"*\" component={Dashboard} />\n            </Switch>\n        </div>\n        ):(\n          <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={signup} />\n              <Route path=\"*\" component={Login} />\n          </Switch>\n       )}\n      </Router>\n      <ToastContainer autoClose={5000} />\n      <Backdrop style={{zIndex:'10 !important'}} open={state.isLoading}>\n                  <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      </stateContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx",["89"],"import React,{useState,useContext} from \"react\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {stateContext} from '../context';\r\nimport {setIsAuthenticated} from '../context/action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: '40%',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const context = useContext(stateContext);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n    localStorage.clear();\r\n    context.dispatch(setIsAuthenticated(false));\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Library System\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search for Books or Authors...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx",["90"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx",["91"],"import React,{useState, useContext} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {postApi} from '../services/apiservice';\r\nimport { Link } from \"react-router-dom\";\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  main:{\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    position: \"absolute\"\r\n  },\r\n  signup: {\r\n    margin: theme.spacing(5,0,0)\r\n  },\r\n  formControl:{\r\n    width:\"100%\"\r\n  }\r\n}));\r\n\r\nexport default function SignUp({history}) {\r\n  const classes = useStyles();\r\n  const [emailId, setEmailId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [cnumber, setContactNo] = useState('');\r\n  const [inValidEmail, setInValidEmail] = useState('');\r\n  const [roleType, setRoleType] = useState('');\r\n  const [cardDetail, setCardDetail] = useState('');\r\n  const context = useContext(stateContext);\r\n\r\n  const registerUser= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        const user={\r\n            FullName:fullName,\r\n            Email:emailId,\r\n            Password:password,\r\n            ContactNumber:cnumber,\r\n            CardDetail:cardDetail,\r\n            RoleType:roleType\r\n          };\r\n        const response= await postApi('SaveUser',user);\r\n        context.dispatch(setIsLoading(false));\r\n        history.push('/login');\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n const onEmailChange=(event)=> {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(event.target.value)){\r\n      setInValidEmail(\"\");\r\n    } else {\r\n      setInValidEmail('Invalid Email format');\r\n    }\r\n  }\r\n\r\n  const handleChangeInroleType = (event) => {\r\n    setRoleType(event.target.value);\r\n  };\r\n\r\n  return (\r\n      <React.Fragment>\r\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.main}>\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  SignUp\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={registerUser}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"Full Name\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Full Name\"\r\n                        placeholder=\"Full Name\"\r\n                        value={fullName}\r\n                        onChange={(e)=>setFullName(e.target.value)}\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        error={inValidEmail}\r\n                        helperText={inValidEmail}\r\n                        onBlur={onEmailChange}\r\n                        value={emailId}\r\n                        onChange={(e)=>setEmailId(e.target.value)}\r\n                        autoComplete=\"email\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        autoComplete=\"password\"\r\n                        name=\"Password\"\r\n                        type=\"password\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                   <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        id=\"contact\"\r\n                        placeholder=\"Contact Number\"\r\n                        name=\"contact\"\r\n                        autoComplete=\"cnumber\"\r\n                        value={cnumber}\r\n                        onChange={(e)=>setContactNo(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        name=\"cardDetail\"\r\n                        placeholder=\"Card Details\"\r\n                        type=\"text\"\r\n                        id=\"cardDetail\"\r\n                        autoComplete=\"current-cardDetail\"\r\n                        value={cardDetail}\r\n                        onChange={(e)=>setCardDetail(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">User Type</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-outlined-label\"\r\n                              id=\"demo-simple-select-outlined\"\r\n                              value={roleType}\r\n                              onChange={handleChangeInroleType}\r\n                              label=\"User Type\"\r\n                            >\r\n                              <MenuItem value={1}>Student</MenuItem>\r\n                              <MenuItem value={2}>Business Owner</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    smallSize\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    disabled={!emailId || !password || !fullName || !roleType || !cnumber}\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                  <Grid container className={classes.signup} justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Link to=\"/login\">Already have an account? Login</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n      </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx",["92"],"import React,{useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport bookurl from '../assets/images/book.png';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  footer:{\r\n      display:'flex',\r\n      justifyContent:'space-around'\r\n  }\r\n}));\r\n\r\nexport default function RecipeReviewCard({book,purchaseBook,borrowBook}) {\r\n  const classes = useStyles();\r\n\r\n  const purchase=()=>{\r\n    purchaseBook(book);\r\n  }\r\n\r\n  const borrow=()=>{\r\n    borrowBook(book)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {book.Title.slice(0,2).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        title={book.Title}\r\n        subheader={`-By ${book.Publisher}`}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={bookurl}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n         {book.Description.length>125?`${book.Description.slice(0,120)} . . .`:book.Description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.footer}>\r\n          <div>\r\n            <Tooltip title=\"Issue book\" aria-label=\"issuebook\">\r\n                <IconButton aria-label=\"issue book\" onClick={borrow}>\r\n                    <LocalLibraryIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Purchse Book\" aria-label=\"Purchase\">\r\n                <IconButton aria-label=\"purchase\" onClick={purchase}>\r\n                    <ShoppingCartIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        <Typography  color=\"textSecondary\" component=\"p\">\r\n            $ {book.Price}\r\n        </Typography>\r\n      </CardActions>\r\n     </Card>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx",["93"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  },\r\n}));\r\n\r\nexport default function AddBook({history,isOpen,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [publisher, setPublisher] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0)\r\n  const context = useContext(stateContext);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n  const saveBook= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        context.dispatch(setIsLoading(false));\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">New Book</DialogTitle>\r\n        <DialogContent>\r\n        <form className={classes.form} onSubmit={saveBook}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"Title\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Title\"\r\n                        value={title}\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Title\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"author\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"author\"\r\n                        value={author}\r\n                        onChange={(e)=>setAuthor(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Author\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"publisher\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"publisher\"\r\n                        value={publisher}\r\n                        onChange={(e)=>setPublisher(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Publisher\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"description\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={(e)=>setDescription(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Description\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"price\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Price\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n              </Grid>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx",["94","95"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport default function PurchaseBook({isOpen,book,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const [title] = useState(book.Title||'');\r\n  const [price, setPrice] = useState(book.Price||0);\r\n  const [id] = useState(book.id||'');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [creditCardNo, setcreditCardNo] = useState('');\r\n  const context = useContext(stateContext);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n  useEffect(() => {\r\n    setTotal(price*quantity);\r\n  }, [quantity,price])\r\n\r\n  const saveBook= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        const order={\r\n          CreditCard:creditCardNo,\r\n          OrderDateAndTime: new Date(),\r\n          BookCode:id,\r\n          UserCode:localStorage.getItem('userId')||'',\r\n          Price: price,\r\n          Quantity: quantity\r\n        }\r\n        context.dispatch(setIsLoading(false));\r\n        close();\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Purchase Book</DialogTitle>\r\n        <DialogContent>\r\n        <form className={classes.form} onSubmit={saveBook}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"Title\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Title\"\r\n                        value={title}\r\n                        readOnly={true}\r\n                        label=\"Title\"\r\n                      />\r\n                    </Grid>\r\n                  <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"creditCardNo\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"creditCardNo\"\r\n                        value={creditCardNo}\r\n                        onChange={(e)=>setcreditCardNo(e.target.value)}\r\n                        readOnly={true}\r\n                        label=\"Credit Card No.\"\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"price\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Price\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"quantity\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"quantity\"\r\n                        value={quantity}\r\n                        onChange={(e)=>setQuantity(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Quantity\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"price\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        value={total}\r\n                        label=\"Total\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n              </Grid>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx",["96","97","98"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nvar d = new Date();\r\nd.setDate(d.getDate()+parseInt(14));\r\nexport default function BorrowBook({isOpen,book,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const [title] = useState(book.Title||'');\r\n  const [issueDate, setIssueDate] = useState(new Date());\r\n  const [returnDate, setReturnDate] = useState(d);\r\n  const context = useContext(stateContext);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(book);\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n\r\n  const saveBook= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        const borrow={\r\n          UserCode:localStorage.getItem('UserId')||'',\r\n          BookCode:book.Id,\r\n          BorrowingDate: issueDate,\r\n          ReturnDate: returnDate\r\n        }\r\n        console.log(borrow);\r\n        context.dispatch(setIsLoading(false));\r\n        close();\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Borrow Book</DialogTitle>\r\n        <DialogContent>\r\n        <form className={classes.form} onSubmit={saveBook}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n          <Grid item xs={12} sm={12}>\r\n             <Typography variant=\"body1\" color=\"textPrimary\" component=\"h3\">{book.Title}</Typography>\r\n             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">By - {book.Author}</Typography>\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            \r\n                  <Grid item xs={12}>\r\n                      <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"outlined\"\r\n                          format=\"dd/MM/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-inline\"\r\n                          label=\"Issued Date\"\r\n                          value={issueDate}\r\n                          fullWidth\r\n                          readOnly={true}\r\n                          onChange={setIssueDate}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                  <Grid item xs={12}>\r\n                      <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"outlined\"\r\n                          format=\"dd/MM/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-inline\"\r\n                          label=\"Return Date\"\r\n                          value={returnDate}\r\n                          fullWidth\r\n                          readOnly={true}\r\n                          onChange={setReturnDate}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <Grid item xs={12} sm={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Save\r\n                        </Button>\r\n                </Grid>\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":17,"column":10,"nodeType":"105","messageId":"106","endLine":17,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":1,"column":15,"nodeType":"105","messageId":"106","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"108","line":38,"column":9,"nodeType":"105","messageId":"106","endLine":38,"endColumn":19},{"ruleId":"103","severity":1,"message":"109","line":83,"column":15,"nodeType":"105","messageId":"106","endLine":83,"endColumn":23},{"ruleId":"103","severity":1,"message":"110","line":1,"column":15,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"111","line":7,"column":9,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"111","line":7,"column":9,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":52,"column":15,"nodeType":"105","messageId":"106","endLine":52,"endColumn":20},{"ruleId":"103","severity":1,"message":"111","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":35,"column":10,"nodeType":"105","messageId":"106","endLine":35,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":48,"column":6,"nodeType":"116","endLine":48,"endColumn":14,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'fetchBooks' is assigned a value but never used.","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'postApi' is defined but never used.","'order' is assigned a value but never used.","'title' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'book'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [book, isOpen]",{"range":"123","text":"124"},[1511,1519],"[book, isOpen]"]