[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx":"19","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\paymentGateway.jsx":"20","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\loans.jsx":"21"},{"size":472,"mtime":1607924696000,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1607843844000,"results":"24","hashOfConfig":"23"},{"size":2032,"mtime":1607936291963,"results":"25","hashOfConfig":"23"},{"size":770,"mtime":1607843844000,"results":"26","hashOfConfig":"23"},{"size":1518,"mtime":1607843844000,"results":"27","hashOfConfig":"23"},{"size":114,"mtime":1607843844000,"results":"28","hashOfConfig":"23"},{"size":83,"mtime":1607843844000,"results":"29","hashOfConfig":"23"},{"size":475,"mtime":1607843844000,"results":"30","hashOfConfig":"23"},{"size":5837,"mtime":1607936464428,"results":"31","hashOfConfig":"23"},{"size":9588,"mtime":1607965725705,"results":"32","hashOfConfig":"23"},{"size":5986,"mtime":1607924696000,"results":"33","hashOfConfig":"23"},{"size":9305,"mtime":1607924696000,"results":"34","hashOfConfig":"23"},{"size":3884,"mtime":1607924696000,"results":"35","hashOfConfig":"23"},{"size":3569,"mtime":1607965824344,"results":"36","hashOfConfig":"23"},{"size":3362,"mtime":1607937039736,"results":"37","hashOfConfig":"23"},{"size":1862,"mtime":1607827205784,"results":"38","hashOfConfig":"23"},{"size":9409,"mtime":1607925870000,"results":"39","hashOfConfig":"23"},{"size":5546,"mtime":1607967270780,"results":"40","hashOfConfig":"23"},{"size":5415,"mtime":1607924696000,"results":"41","hashOfConfig":"23"},{"size":2651,"mtime":1607843844000,"results":"42","hashOfConfig":"23"},{"size":3368,"mtime":1607936978511,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"twlnfm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\index.js",[],["95","96"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\reportWebVitals.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\App.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\reducer.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\notify.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\theme.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\index.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\context\\action.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\header.jsx",["97"],"import React,{useState,useContext} from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {stateContext} from '../context';\r\nimport {setIsAuthenticated} from '../context/action';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: '40%',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  let history = useHistory()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const context = useContext(stateContext);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n    localStorage.clear();\r\n    context.dispatch(setIsAuthenticated(false));\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const routeToOrders = () => {\r\n    history.push(\"orders\");\r\n  };\r\n\r\n  const routeToLoans = () => {\r\n    history.push(\"loans\");\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={logoutUser}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Library System\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          <Button  variant=\"contained\" color=\"primary\" onClick={routeToOrders}>Orders</Button>\r\n          <Button  variant=\"contained\" color=\"primary\" onClick={routeToLoans}>Loans</Button>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\dashboard.jsx",["98","99","100"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\login.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\register.jsx",["101"],"import React,{useState, useContext} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {postApi} from '../services/apiservice';\r\nimport { Link } from \"react-router-dom\";\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\n\r\n\r\n/**\r\n * styles for register component\r\n */\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  main:{\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    position: \"absolute\"\r\n  },\r\n  signup: {\r\n    margin: theme.spacing(5,0,0)\r\n  },\r\n  formControl:{\r\n    width:\"100%\"\r\n  }\r\n}));\r\n\r\n/**\r\n * Register component declartion\r\n * @param {*} param0 \r\n */\r\nexport default function SignUp({history}) {\r\n  // Variable declartion like email,password,fullname, cnumber, roleType,cardDetails and context\r\n  const classes = useStyles();\r\n  const [emailId, setEmailId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [cnumber, setContactNo] = useState('');\r\n  const [inValidEmail, setInValidEmail] = useState('');\r\n  const [roleType, setRoleType] = useState('');\r\n  const [cardDetail, setCardDetail] = useState('');\r\n  const context = useContext(stateContext);\r\n\r\n  /**\r\n   * Method to register user by submitting the form\r\n   * @param {*} event \r\n   */\r\n  const registerUser= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        const user={\r\n            FullName:fullName,\r\n            Email:emailId,\r\n            Password:password,\r\n            ContactNumber:cnumber,\r\n            CardDetail:cardDetail,\r\n            RoleType:roleType\r\n          };\r\n        const response= await postApi('SaveUser',user);\r\n        context.dispatch(setIsLoading(false));\r\n        history.push('/login');\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n/**\r\n * method to validate email\r\n * @param {*} event \r\n */\r\n const onEmailChange=(event)=> {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(event.target.value)){\r\n      setInValidEmail(\"\");\r\n    } else {\r\n      setInValidEmail('Invalid Email format');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * method to change in role type\r\n   * @param {*} event \r\n   */\r\n  const handleChangeInroleType = (event) => {\r\n    setRoleType(event.target.value);\r\n  };\r\n\r\n  return (\r\n      <React.Fragment>\r\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.main}>\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  SignUp\r\n                </Typography>\r\n                {/* form for registering user */}\r\n                <form className={classes.form} onSubmit={registerUser}>\r\n                  <Grid container spacing={2}>\r\n                    {/* full name field */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"Full Name\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Full Name\"\r\n                        placeholder=\"Full Name\"\r\n                        value={fullName}\r\n                        onChange={(e)=>setFullName(e.target.value)}\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    {/* email field */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        error={inValidEmail}\r\n                        helperText={inValidEmail}\r\n                        onBlur={onEmailChange}\r\n                        value={emailId}\r\n                        onChange={(e)=>setEmailId(e.target.value)}\r\n                        autoComplete=\"email\"\r\n                      />\r\n                    </Grid>\r\n                    {/* passowrd field */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        autoComplete=\"password\"\r\n                        name=\"Password\"\r\n                        type=\"password\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    {/* contact field */}\r\n                   <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        id=\"contact\"\r\n                        placeholder=\"Contact Number\"\r\n                        name=\"contact\"\r\n                        autoComplete=\"cnumber\"\r\n                        value={cnumber}\r\n                        onChange={(e)=>setContactNo(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    {/* card details field */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.fields}\r\n                        required\r\n                        fullWidth\r\n                        name=\"cardDetail\"\r\n                        placeholder=\"Card Details\"\r\n                        type=\"text\"\r\n                        id=\"cardDetail\"\r\n                        autoComplete=\"current-cardDetail\"\r\n                        value={cardDetail}\r\n                        onChange={(e)=>setCardDetail(e.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    {/* User Type field */}\r\n                    <Grid item xs={12} sm={12}>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">User Type</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-outlined-label\"\r\n                              id=\"demo-simple-select-outlined\"\r\n                              value={roleType}\r\n                              onChange={handleChangeInroleType}\r\n                              label=\"User Type\"\r\n                            >\r\n                              <MenuItem value={1}>Student</MenuItem>\r\n                              <MenuItem value={2}>Store Owner</MenuItem>\r\n                              <MenuItem value={3}>Admin</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* Signup button */}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    smallSize\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    disabled={!emailId || !password || !fullName || !roleType || !cnumber}\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                  {/* Link to login screen */}\r\n                  <Grid container className={classes.signup} justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Link to=\"/login\">Already have an account? Login</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n      </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\services\\apiservice.js",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\book.jsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\orders.jsx",["102"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Header from './header';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {getOrderBookApi} from '../services/apiservice';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '90vh',\r\n  },\r\n  bookContainer:{\r\n    display: 'grid',\r\n    gridColumnGap: '30px',\r\n    gridRowGap: '30px',\r\n    gridTemplateColumns: 'repeat(auto-fit,minmax(200px,1fr))',\r\n    padding: '10px'\r\n  },\r\n  book:{\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    textAlign:'center'\r\n  },\r\n  action:{\r\n    display:'flex',\r\n    flexDirection:'row-reverse',\r\n    padding:\"10px 10px\"\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function BookOrders() {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n    fetchOrderDetails()\r\n  },[])\r\n\r\n  const fetchOrderDetails=()=>{\r\n    getOrderBookApi(`GetOrderByUserCode?userCode=${localStorage.getItem('userCode')}`)\r\n    .then(response=>{\r\n      setRows(response)\r\n    },error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header/>\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n                <TableCell align={'center'}>\r\n                  Order Id\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Book code\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Price\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Quantity\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Total\r\n                </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                      <TableCell key={row.OrderId} align={'center'}>\r\n                        {row.OrderId}\r\n                      </TableCell>\r\n                      <TableCell key={row.book} align={'center'}>\r\n                        {row.book}\r\n                      </TableCell>\r\n                      <TableCell key={row.price} align={'center'}>\r\n                        {row.price}\r\n                      </TableCell>\r\n                      <TableCell key={row.quantity} align={'center'}>\r\n                        {row.quantity}\r\n                      </TableCell>\r\n                      <TableCell key={`Total=${row.OrderId}`} align={'center'}>\r\n                        {row.price * row.quantity}\r\n                      </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\utils\\constants.js",[],["103","104"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\addBook.jsx",["105","106","107","108","109"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {getApiByCategory} from '../services/apiservice';\r\nimport {postApi, getApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n/**\r\n * Styles declartion for Add book component\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    width:\"100%\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  }\r\n}));\r\n\r\n/**\r\n * Declartion of Add book component\r\n * @param {*} param0 \r\n */\r\nexport default function AddBook({history,isOpen,close}) {\r\n  // Variable declartion like open, title, author, publisher, description, price and categories\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [publisher, setPublisher] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState(-1);\r\n  const context = useContext(stateContext);\r\n  const [catType, setCatType] = useState('');\r\n  const options = [];\r\n\r\n  /**\r\n   * Method ti close Add book dialog\r\n   */\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  /**\r\n   * Useeffect method is executed only when the component  isloaded and when the isOpen value is changed\r\n   */\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n    fetchBooksCategories()\r\n  }, [isOpen])\r\n\r\n  // Useffect is executed only when component is loaded fetches all the categories\r\n  useEffect(() => {\r\n    fetchBooksCategories();\r\n  }, [])\r\n\r\n  /**\r\n   * Method to fetch book categories\r\n   */\r\n  // const fetchBooksCategories=()=>{\r\n  //   getApi('GetAllCategories')\r\n  //   .then(response=>{\r\n  //     setCategories(response);\r\n  //   },error => {\r\n  //     console.log(error);\r\n  //   })\r\n  // }\r\n\r\n  /**\r\n   * Form submit method to save the book\r\n   * @param {*} event \r\n   */\r\n  const saveBook= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        handleClose();\r\n        const bookItem={\r\n          Title: title,\r\n          Author: author,\r\n          Description:description,\r\n          Publisher:publisher,\r\n          CatId:category,\r\n          Price: Number(price)\r\n        }\r\n        const response= await postApi('SaveBook',bookItem);\r\n        context.dispatch(setIsLoading(false));\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n  const fetchBooksCategories=()=>{\r\n    let allData;\r\n    getApiByCategory('GetAllCategories')\r\n    .then(response=>{\r\n      allData = response;\r\n      for(let i=0;i<allData.length;i++) {\r\n        options.push({\r\n          value: allData[i].catId,\r\n          label: allData[i].name\r\n        });\r\n      }\r\n    },error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  /**\r\n   * Method to handle the change in category selected\r\n   * @param {*} argEvent \r\n   */\r\n  const handleChangeInCategory=argEvent=>{\r\n    setCategory(argEvent.target.value);\r\n  }\r\n\r\n\r\n  const handleChangeInCatType = (event) => {\r\n    setCatType(event.label);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">New Book</DialogTitle>\r\n        <DialogContent>\r\n          {/* FOrm for add book */}\r\n        <form className={classes.form} onSubmit={saveBook}>\r\n                  <Grid container spacing={2}>\r\n                    {/* Input for book title */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"Title\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Title\"\r\n                        value={title}\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Title\"\r\n                      />\r\n                    </Grid>\r\n                    {/* Input for Authot */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"author\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"author\"\r\n                        value={author}\r\n                        onChange={(e)=>setAuthor(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Author\"\r\n                      />\r\n                    </Grid>\r\n                    {/* Input for Publisher */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"publisher\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"publisher\"\r\n                        value={publisher}\r\n                        onChange={(e)=>setPublisher(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Publisher\"\r\n                      />\r\n                    </Grid>\r\n                    {/* Input for book description */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"description\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={(e)=>setDescription(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Description\"\r\n                      />\r\n                    </Grid>\r\n                    {/* Input select for Book category */}\r\n                    <Grid item xs={12} sm={12}>\r\n                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={category}\r\n                            onChange={handleChangeInCategory}\r\n                            label=\"Category\"\r\n                          >\r\n                            {\r\n                              categories.length>0&& categories.map((item,index)=>(\r\n                                <MenuItem key={`Book-${item.catId}-${index}`} value={item.catId}>{item.name}</MenuItem>\r\n                              ))\r\n                            }\r\n                          </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    {/* Input for Price of the book */}\r\n                    <Grid item xs={12} sm={12}>\r\n                      <TextField\r\n                        name=\"price\"\r\n                        className={classes.fields}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        value={price}\r\n                        onChange={(e)=>setPrice(e.target.value)}\r\n                        autoFocus\r\n                        label=\"Price\"\r\n                      />\r\n                    </Grid>\r\n                    {/* Button to save the book */}\r\n                    <Grid item xs={12} sm={12}>\r\n                    <Select className={classes.formControl}\r\n                        value={catType}\r\n                        onChange={handleChangeInCatType}\r\n                        options={options}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n              </Grid>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\purchaseBook.jsx",["110"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\borrowBook.jsx",["111","112"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/**\r\n * Styles for borrow book component\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nvar d = new Date();\r\nd.setDate(d.getDate()+parseInt(14));\r\n\r\n/**\r\n * Borrow book component declaration\r\n * @param {*} param0 \r\n */\r\nexport default function BorrowBook({isOpen,book,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const [issueDate, setIssueDate] = useState(new Date());\r\n  const [returnDate, setReturnDate] = useState(d);\r\n  const context = useContext(stateContext);\r\n\r\n  /**\r\n   * Method to close borrow book\r\n   */\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  // Useeffect run when component loads for the first time and when isOpen variable changes\r\n  useEffect(() => {\r\n    console.log(book);\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n\r\n  /**\r\n   * Mathod to save borrowed book\r\n   * @param {*} event \r\n   */\r\n  const saveBorrowedBook= async (event)=>{\r\n    event.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        handleClose();\r\n        const borrow={\r\n          UserCode:localStorage.getItem('userCode')||'',\r\n          BookCode:book.bookCode,\r\n          BorrowingDate: issueDate,\r\n          ReturnDate: returnDate\r\n        }\r\n        const response= await postApi('SaveLoan',borrow);\r\n        context.dispatch(setIsLoading(false));\r\n        close();\r\n    } catch(error){\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Borrow Book</DialogTitle>\r\n        <DialogContent>\r\n          {/* Form for borrow book */}\r\n        <form className={classes.form} onSubmit={saveBorrowedBook}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        {/* Header for borrow book */}\r\n          <Grid item xs={12} sm={12}>\r\n            {/* Book name */}\r\n             <Typography variant=\"body1\" color=\"textPrimary\" component=\"h3\">{book.title}</Typography>\r\n             {/* Book author name */}\r\n             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">By - {book.author}</Typography>\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            {/* Date input for borrowed date */}\r\n                  <Grid item xs={12}>\r\n                      <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"outlined\"\r\n                          format=\"dd/MM/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-inline\"\r\n                          label=\"Issued Date\"\r\n                          value={issueDate}\r\n                          fullWidth\r\n                          readOnly={true}\r\n                          onChange={setIssueDate}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                {/* date selector for book return date */}\r\n                  <Grid item xs={12}>\r\n                      <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant=\"outlined\"\r\n                          format=\"dd/MM/yyyy\"\r\n                          margin=\"normal\"\r\n                          id=\"date-picker-inline\"\r\n                          label=\"Return Date\"\r\n                          value={returnDate}\r\n                          fullWidth\r\n                          readOnly={true}\r\n                          onChange={setReturnDate}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              {/* button to confirm the borrowed book */}\r\n                <Grid item xs={12} sm={12}>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            Save\r\n                        </Button>\r\n                </Grid>\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\paymentGateway.jsx",["113","114","115","116","117","118","119","120","121"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {postApi} from '../services/apiservice';\r\nimport {stateContext} from '../context';\r\nimport {setIsLoading} from '../context/action'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0.5)\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport default function Paymentgateway({isOpen,book,close}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n//   const [title] = useState(book.Title||'');\r\n//   const [price, setPrice] = useState(book.Price||0);\r\n//   const [id] = useState(book.id||'');\r\n//   const [quantity, setQuantity] = useState(1);\r\n//   const [total, setTotal] = useState(0);\r\n//   const [creditCardNo, setcreditCardNo] = useState('');\r\n//   const context = useContext(stateContext);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(isOpen)\r\n  }, [isOpen])\r\n\r\n//   useEffect(() => {\r\n//     setTotal(price*quantity);\r\n//   }, [quantity,price])\r\n\r\n//   const saveBook= async (event)=>{\r\n//     event.preventDefault();\r\n//     try{\r\n//         context.dispatch(setIsLoading(true));\r\n//         const order={\r\n//           CreditCard:creditCardNo,\r\n//           OrderDateAndTime: new Date(),\r\n//           BookCode:id,\r\n//           UserCode:localStorage.getItem('userId')||'',\r\n//           Price: price,\r\n//           Quantity: quantity\r\n//         }\r\n//         context.dispatch(setIsLoading(false));\r\n//         close();\r\n//     } catch(error){\r\n//       context.dispatch(setIsLoading(false));\r\n//     }\r\n//   }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Payment Gateway</DialogTitle>\r\n        <DialogContent>\r\n            <div>Hi. this is payment page!</div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* {isPurchaseBookOpen?(<PaymentGateway isOpen={isPurchaseBookOpen} close={closePurchaseBook}/>):(\"\")} */}\r\n    </React.Fragment>\r\n  );\r\n\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\library-managment\\src\\components\\loans.jsx",["122"],"import React,{useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Header from './header';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {getOrderBookApi} from '../services/apiservice';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '90vh',\r\n  },\r\n  bookContainer:{\r\n    display: 'grid',\r\n    gridColumnGap: '30px',\r\n    gridRowGap: '30px',\r\n    gridTemplateColumns: 'repeat(auto-fit,minmax(200px,1fr))',\r\n    padding: '10px'\r\n  },\r\n  book:{\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    textAlign:'center'\r\n  },\r\n  action:{\r\n    display:'flex',\r\n    flexDirection:'row-reverse',\r\n    padding:\"10px 10px\"\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function LoanedBooks() {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n    fetchOrderDetails()\r\n  },[])\r\n\r\n  const formatedDate=(date)=>{\r\n    return new Date(date).toLocaleDateString();\r\n  }\r\n\r\n  const fetchOrderDetails=()=>{\r\n    getOrderBookApi(`GetLoanByUserCode?userCode=${localStorage.getItem('userCode')}`)\r\n    .then(response=>{\r\n      response.forEach(item=>{\r\n        item.borrowingDate= formatedDate(item.borrowingDate);\r\n        item.returnDate= formatedDate(item.borrowingDate);\r\n      })\r\n      setRows(response)\r\n    },error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header/>\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n                <TableCell align={'center'}>\r\n                  Loan Id\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Book Code\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Borroed Date\r\n                </TableCell>\r\n                <TableCell align={'center'}>\r\n                  Return date\r\n                </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                      <TableCell key={row.loanId} align={'center'}>\r\n                        {row.loanId}\r\n                      </TableCell>\r\n                      <TableCell key={row.bookCode} align={'center'}>\r\n                        {row.bookCode}\r\n                      </TableCell>\r\n                      <TableCell key={row.borrowingDate} align={'center'}>\r\n                        {row.borrowingDate}\r\n                      </TableCell>\r\n                      <TableCell key={row.returnDate} align={'center'}>\r\n                        {row.returnDate}\r\n                      </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":15,"nodeType":"129","messageId":"130","endLine":1,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":120,"column":6,"nodeType":"133","endLine":120,"endColumn":8,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":134,"column":6,"nodeType":"133","endLine":134,"endColumn":16,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"137","line":163,"column":9,"nodeType":"129","messageId":"130","endLine":163,"endColumn":20},{"ruleId":"127","severity":1,"message":"138","line":94,"column":15,"nodeType":"129","messageId":"130","endLine":94,"endColumn":23},{"ruleId":"127","severity":1,"message":"139","line":1,"column":25,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"123","replacedBy":"140"},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","severity":1,"message":"142","line":8,"column":18,"nodeType":"129","messageId":"130","endLine":8,"endColumn":24},{"ruleId":"127","severity":1,"message":"143","line":53,"column":22,"nodeType":"129","messageId":"130","endLine":53,"endColumn":35},{"ruleId":"131","severity":1,"message":"144","line":73,"column":6,"nodeType":"133","endLine":73,"endColumn":14,"suggestions":"145"},{"ruleId":"131","severity":1,"message":"144","line":78,"column":6,"nodeType":"133","endLine":78,"endColumn":8,"suggestions":"146"},{"ruleId":"127","severity":1,"message":"138","line":109,"column":15,"nodeType":"129","messageId":"130","endLine":109,"endColumn":23},{"ruleId":"127","severity":1,"message":"138","line":60,"column":15,"nodeType":"129","messageId":"130","endLine":60,"endColumn":23},{"ruleId":"131","severity":1,"message":"147","line":59,"column":6,"nodeType":"133","endLine":59,"endColumn":14,"suggestions":"148"},{"ruleId":"127","severity":1,"message":"138","line":77,"column":15,"nodeType":"129","messageId":"130","endLine":77,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":1,"column":15,"nodeType":"129","messageId":"130","endLine":1,"endColumn":23},{"ruleId":"127","severity":1,"message":"139","line":1,"column":25,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"149","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"127","severity":1,"message":"150","line":7,"column":9,"nodeType":"129","messageId":"130","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"151","line":8,"column":9,"nodeType":"129","messageId":"130","endLine":8,"endColumn":21},{"ruleId":"127","severity":1,"message":"152","line":9,"column":9,"nodeType":"129","messageId":"130","endLine":9,"endColumn":21},{"ruleId":"127","severity":1,"message":"153","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":17},{"ruleId":"127","severity":1,"message":"154","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":12},{"ruleId":"127","severity":1,"message":"155","line":25,"column":9,"nodeType":"129","messageId":"130","endLine":25,"endColumn":16},{"ruleId":"131","severity":1,"message":"156","line":45,"column":5,"nodeType":"133","endLine":45,"endColumn":7,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'context' and 'fetchBooks'. Either include them or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'books' and 'context'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayBooks' needs the current value of 'books'.",["161"],"'paymentOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'useContext' is defined but never used.",["158"],["159"],"'getApi' is defined but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBooksCategories'. Either include it or remove the dependency array.",["162"],["163"],"React Hook useEffect has a missing dependency: 'book'. Either include it or remove the dependency array.",["164"],"'Button' is defined but never used.","'postApi' is defined but never used.","'stateContext' is defined but never used.","'setIsLoading' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrderDetails'. Either include it or remove the dependency array.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [context, fetchBooks]",{"range":"178","text":"179"},"Update the dependencies array to be: [books, category, context]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchBooksCategories, isOpen]",{"range":"182","text":"183"},"Update the dependencies array to be: [fetchBooksCategories]",{"range":"184","text":"185"},"Update the dependencies array to be: [book, isOpen]",{"range":"186","text":"187"},"Update the dependencies array to be: [fetchOrderDetails]",{"range":"188","text":"189"},[3568,3570],"[context, fetchBooks]",[3994,4004],"[books, category, context]",[2371,2379],"[fetchBooksCategories, isOpen]",[2523,2525],"[fetchBooksCategories]",[1727,1735],"[book, isOpen]",[1229,1231],"[fetchOrderDetails]"]